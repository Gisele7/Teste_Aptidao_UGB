@model Teste_Aptidao_UGB.Model.Models.Entrada

@{
    ViewData["Title"] = "Nova entrada";
}


<h4>Nova entrada</h4>
<hr />
@{
    if (ViewData["Mensagem"] != null)
    {
        <a asp-action="Create" class="btn-sm btn-primary"> <i class="fa fa-user-plus"></i>&nbsp; Nova entrada</a>
    }
}
<div class="row">
    <form asp-action="Create">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <div class="form-group">
            <label asp-for="EtnotaFiscal"></label>
            <input asp-for="EtnotaFiscal" class="form-control" />
            <span asp-validation-for="EtnotaFiscal" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="Etdata"></label>
            <input asp-for="Etdata" class="form-control" type="datetime-local" />
            <span asp-validation-for="Etdata" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="EtcodDeposito"></label>
            <select class="form-select" asp-for="EtcodDeposito" asp-items="@ViewBag.EtcodDeposito">
                <option selected value="">Selecione o depósito</option>
            </select>
            <span asp-validation-for="EtcodDeposito" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="EtcodFornecedor"></label>
            <select class="form-select" asp-for="EtcodFornecedor" asp-items="@ViewBag.EtcodFornecedor">
                <option selected value="">Selecione o fornecedor</option>
            </select>
            <span asp-validation-for="EtcodFornecedor" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="Etquantidade"></label>
            <input asp-for="Etquantidade" class="form-control" type="number" />
            <span asp-validation-for="Etquantidade" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="EtcodProduto"></label>
            <div class="col-md" id="remoteProduto">
                <input id="produto" type="text" class="form-control typeahead" />
                <input asp-for="EtcodProduto" type="hidden" class="form-control" />
                <span asp-validation-for="EtcodProduto" class="text-danger"></span>
            </div>
        </div>
        <br />
        <div class="form-group">
            <button class="btn-sm btn-success"><i class="fa fa-save"></i>&nbsp; Salvar</button>
        </div>
    </form>
</div>

<div>
    <a asp-action="List">Voltar para a lista</a>
</div>
@{
    var entrada = new Entrada();
    if (Model != null)
    {
        entrada = Model;
    }
}
@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        var mensagem = "@ViewData["Mensagem"]";
        var mensagemErro = "@ViewData["MensagemErro"]";
        const urlProdutos = "@Url.Action("SearchProduto", "AutoComplete")";
        const produto = "@entrada.EtcodProduto";
    </script>

    <script>
        //Lógica utilizada para exibir as mensagens de sucesso ou erro ao salvar os dados.
        if (mensagem != "") {
            MensagemOK(mensagem);
        }
        if (mensagemErro != "") {
            MensagemErro(mensagemErro);
        }


        //Rotina para carregar o TypeAhead (autocomplete) dos produtos
        //Utilizei um compomente chamado TypeAhead que faz a consulta dos produtos
        //tanto pelo código, quanto pela descrição.
        var produtos = new Bloodhound({
            datumTokenizer: Bloodhound.tokenizers.obj.whitespace('value'),
            queryTokenizer: Bloodhound.tokenizers.whitespace,
            remote: {
                url: urlProdutos + "?termo=%QUERY",
                wildcard: '%QUERY',
            }
        });



        //Rotina que define os dados para o TypeAhead e informa qual propriedade desses dados será
        //utilizada para mostrar os itens. Nessa caso a prdescricao que é a descrição dos produtos
        $('#remoteProduto .typeahead').typeahead(null, {
            name: 'produto',
            display: 'prdescricao',
            source: produtos
        })
        //Rotina que é executada ao selecionar um item no TypeAhead.
        //O campo ligado a Model EtcodProduto recebe o código do produto para que possa ser passado para a controller
        $("#produto").on('typeahead:selected', function (evt, item) {
            console.log('teste', item)
            $("#EtcodProduto").val(item.prcodigoEan);
        })

        //Rotina que após carregar a página
        //Seta os valores dos TypeAheads e dos inputs ligados a Model.
        $(document).ready(function () {
            if (produto != "") {
                $('#EtcodProduto').typeahead('val', produto);
            }
        });

    </script>
}
